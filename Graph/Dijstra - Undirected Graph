#include <bits/stdc++.h>
using namespace std;

#define optimize() ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
typedef long long ll;
#define vi vector<int>
#define vl vector<ll>
#define pb push_back
#define all(v) v.begin(), v.end()
#define cy cout << "Yes\n"
#define cn cout << "No\n"
#define endl '\n'
const long long M = 1000000007;

void solve() {
    ll n, m;
    cin >> n >> m;

    vector<vector<pair<ll, ll>>> v(n + 1);
    vector<ll> dis(n + 1, LLONG_MAX);
    dis[1] = 0;

    for (int i = 0; i < m; i++) {
        ll x, y, z;
        cin >> x >> y >> z;
        v[x].pb({y, z});
        v[y].pb({x, z});
    }

    set<pair<ll, ll>> pq;
    pq.insert({0, 1});

    while (!pq.empty()) {
        ll dist = (*pq.begin()).first;
        ll node = (*pq.begin()).second;
        pq.erase(pq.begin());

        for (auto &[child, edge] : v[node]) {
            if (dis[child] > dist + edge) {
                pq.erase({dis[child], child});
                dis[child] = dist + edge;
                pq.insert({dis[child], child});
            }
        }
    }

    for (int i = 1; i <=n ; i++) cout << dis[i] << " ";
    cout << endl;
}

int main() {
    optimize();
    // int t;
    // cin >> t;
    // while (t--) {
    //     solve();
    // }
    solve();
    return 0;
}
