Follow --LIFO-- (last in, First out)

-- 1,2,3,4,5 - pop will remove 5.


ðŸ›  Example Applications
a) Balanced Parentheses:

bool isBalanced(string expr) {
    stack<char> s;
    for(char c : expr) {
        if(c == '(' || c == '[' || c == '{')
            s.push(c);
        else {
            if(s.empty()) return false;
            if((c == ')' && s.top() != '(') ||
               (c == ']' && s.top() != '[') ||
               (c == '}' && s.top() != '{'))
                return false;
            s.pop();
        }
    }
    return s.empty();
}

b) Reverse a string

string reverseString(string str) {
    stack<char> s;
    for(char c : str) s.push(c);

    string rev = "";
    while(!s.empty()) {
        rev += s.top();
        s.pop();
    }
    return rev;
}

c) Evaluation PostFIX
int evaluatePostfix(string expr) {
    stack<int> s;
    for(char c : expr) {
        if(isdigit(c)) s.push(c - '0');
        else {
            int b = s.top(); s.pop();
            int a = s.top(); s.pop();
            if(c == '+') s.push(a+b);
            else if(c == '-') s.push(a-b);
            else if(c == '*') s.push(a*b);
            else if(c == '/') s.push(a/b);
        }
    }
    return s.top();
}

